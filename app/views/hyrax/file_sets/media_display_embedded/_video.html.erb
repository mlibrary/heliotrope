<% content_for :head do %>
  <%# the meta tag because of https://github.com/mlibrary/heliotrope/issues/1084 %>
  <%# ...and also as this visit-control setting seems to be the only way to have the `$(document).ready` always... %>
  <%# fire, i.e. on both initial and subsequent page loads, while restricting event-driven JS (placed in <head>)... %>
  <%# to specific pages. Happily this also means no Turbolinks-related changes to `ableplayer.js` are necessary. %>
  <meta name="turbolinks-visit-control" content="reload">
  <!-- Able Player CSS -->
  <link rel="stylesheet" href="/ableplayer-4.5/build/ableplayer.min.css" type="text/css"/>
  <!-- Able Player JavaScript -->
  <%# we used to have an entire copy of ableplayer.js just for embed view tweaks, instead now we'll just override... %>
  <%# AblePlayer.prototype methods as seen below. NB NB check these work appropriately after an upgrade. %>
  <script src="/ableplayer-4.5/build/ableplayer.js"></script>
<% end %>

<script>
  <%# NB: Update the links below (if necessary) and verify that these overrides work as expected after an upgrade! %>
  <%# https://tools.lib.umich.edu/jira/browse/HELIO-4167 %>
  <%# The 'Captions' and 'Transcripts' options should be hidden in embed views %>
  <%# https://github.com/ableplayer/ableplayer/blob/803bc5394cbbfbbec8cb1abe291f9ef6b65227b9/scripts/preference.js#L86 %>
  AblePlayer.prototype.getPreferencesGroups = function() {
    return ['descriptions','keyboard'];
  };

  <%# Captions cannot be positioned underneath in embed views as there is no space for them in the nested divs %>
  <%# https://github.com/ableplayer/ableplayer/blob/803bc5394cbbfbbec8cb1abe291f9ef6b65227b9/scripts/caption.js#L402 %>
  AblePlayer.prototype.positionCaptions = function(position) {
    if (typeof this.$captionsWrapper !== 'undefined') {
        this.$captionsWrapper.removeClass('able-captions-below').addClass('able-captions-overlay');
        this.$captionsWrapper.css({
          'background-color': 'transparent',
          'opacity': ''
        });
    }
  };
</script>

<video id="video"
       preload="metadata"
       width="8000px" <%# https://tools.lib.umich.edu/jira/browse/HELIO-746?focusedCommentId=1074044&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1074044 %>
       data-able-player
       data-skin="2020"
       data-captions-position="overlay" <%# Does not have the desired effect if the user has set a "Below video" caption position preference. Hence `checkElement()` fiddling below. %>
       data-include-transcript="false"
       <%# `fs=1` param right now targets external/non-CSB embed use cases only. %>
       <%# CSB has issues with fullscreen. See HELIO-2961 and HELIO-4024. Maybe other issues too. %>
       data-allow-fullscreen=<%= params[:fs] == '1' ? "true" : "false" %>
       poster="<%= hyrax.download_path(file_set.id, file: 'jpeg') %>"
       <%= raw file_set.closed_captions.present? ? 'data-transcript-div="video-hidden-transcript-container" data-lyrics-mode' : 'data-include-transcript="false"' %>>
  <source src="<%= hyrax.download_path(file_set, file: 'mp4') %>" type="video/mp4" />
  <% if file_set.closed_captions.present? %><%# kind="subtitles" not "captions" due to https://github.com/mlibrary/heliotrope/issues/1234 %>
    <track kind="subtitles" src="<%= hyrax.download_path(file_set.id, file: 'captions_vtt') %>" srclang="en" label="English"  />
  <% end %>
  <% if file_set.visual_descriptions.present? %>
    <track kind="descriptions" src="<%= hyrax.download_path(file_set, file: 'descriptions_vtt') %>" srclang="en" label="English"  />
  <% end %>
  Your browser does not support the video tag.
</video>
<% if file_set.closed_captions.present? %>
  <%# There's no way to show this right now, due to the restrictive "responsive" nested divs on the iframe, nor is... %>
  <%# there a way to turn the interactive transcript off (without hacks). So keep it below the embedded iframe window. %>
  <div id="video-hidden-transcript-container"></div>
<% end %>

<script>
  $(document).ready(function() {
    setupVideoAnalytics();
  });

  function setupVideoAnalytics() {
    if (typeof(ga) == typeof(Function)) {
      var video = $('#video').get(0);
      video.addEventListener("play", function() {
        press_tracker_event('e_reader', 'play_video', window.location.href);
      });
      video.addEventListener("pause", function() {
        press_tracker_event('e_reader', 'stop_video', window.location.href);
      });
    }
  }
</script>
