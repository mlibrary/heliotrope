<h1>Publishers Summary</h1>
<table id="myTable" class="table table-striped" summary="Respository Publishers Stats">
  <tr>
    <th>
      <%= link_to(new_press_path) do %>
        <span class="fa fa-plus" aria-hidden="true"></span> New
      <% end %>
    </th>
    <th onclick="sortTable(1, false)">Publisher</th>
    <th onclick="sortTable(3, false)">Modified</th>
    <th onclick="sortTable(2, false)">Subdomain</th>
    <th onclick="sortTable(4, true)">Monographs</th>
    <th onclick="sortTable(5, true)">Resources</th>
    <th onclick="sortTable(6, true)">Users</th>
    <th></th>
  </tr>
  <% @publishers_stats[:presses].each do |press| %>
    <tr>
      <td><%= link_to(edit_press_path(press[:subdomain])) do %>
          <span class="fa fa-pencil" aria-hidden="true"></span> Edit
        <% end %>
      </td>
      <td><%= press[:name] %></td>
      <td><%= press[:modified] %></td>
      <td><%= link_to press[:subdomain], "/#{press[:subdomain]}?locale=#{I18n.locale}" %></td>
      <td><%= press[:monographs] %>&nbsp;<%= link_to(concern_monographs_new_path(press: press[:subdomain])) do %>
          <span class="fa fa-plus" aria-hidden="true"></span> Add
        <% end %>
      </td>
      <td><%= press[:resources] %></td>
      <td><%= press[:users] %></td>
      <td>
        <% if press[:trash] %>
          <%= link_to(press_path(press[:subdomain]), method: :delete, class: "btn btn-default", data: { confirm: 'Are you sure?' }) do %>
            <span class="fa fa-trash" aria-hidden="true"></span>
          <% end %>
      <% end %>
      </td>
    </tr>
  <% end %>
</table>
<form name="refresh" method="get" action="<%= fulcrum_partials_path(:refresh) %>">
  <p>
    <button name="submit" type="submit" value="refresh">Refresh</button>
    <b><em>Publisher stats last calculated <%= @publishers_stats[:timestamp] %></em></b>
  </p>
</form>
<script>
  function sortTable(n, number) {
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("myTable");
    switching = true;
    //Set the sorting direction to ascending:
    dir = "asc";
    /*Make a loop that will continue until
     no switching has been done:*/
    while (switching) {
      //start by saying: no switching is done:
      switching = false;
      rows = table.getElementsByTagName("TR");
      /*Loop through all table rows (except the
       first, which contains table headers):*/
      for (i = 1; i < (rows.length - 1); i++) {
        //start by saying there should be no switching:
        shouldSwitch = false;
        /*Get the two elements you want to compare,
         one from current row and one from the next:*/
        x = rows[i].getElementsByTagName("TD")[n];
        y = rows[i + 1].getElementsByTagName("TD")[n];
        /*check if the two rows should switch place,
         based on the direction, asc or desc:*/
        if (dir == "asc") {
          if (number) {
            if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
              //if so, mark as a switch and break the loop:
              shouldSwitch= true;
              break;
            }
          } else {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
              //if so, mark as a switch and break the loop:
              shouldSwitch= true;
              break;
            }
          }
        } else if (dir == "desc") {
          if (number) {
            if (parseFloat(x.innerHTML) < parseFloat(y.innerHTML)) {
              //if so, mark as a switch and break the loop:
              shouldSwitch = true;
              break;
            }
          } else {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
              //if so, mark as a switch and break the loop:
              shouldSwitch= true;
              break;
            }
          }
        }
      }
      if (shouldSwitch) {
        /*If a switch has been marked, make the switch
         and mark that a switch has been done:*/
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
        //Each time a switch is done, increase this count by 1:
        switchcount ++;
      } else {
        /*If no switching has been done AND the direction is "asc",
         set the direction to "desc" and run the while loop again.*/
        if (switchcount == 0 && dir == "asc") {
          dir = "desc";
          switching = true;
        }
      }
    }
  }
</script>