<% provide :page_title, @title || "Title" %>
<%# https://github.com/mlibrary/heliotrope/issues/1228 %>
<% content_for :head do %>
  <meta name="turbolinks-cache-control" content="no-cache">

  <% if @map_file_presenter.present? %>
    <script type="text/javascript">
        var close_map = function() {
            document.querySelector('#modal-pdc-map').setAttribute('aria-hidden', 'true');
            document.querySelector('#action-map').focus();
        }

        var open_map = function() {
            document.querySelector('#modal-pdc-map').setAttribute('aria-hidden', 'false');
        }
    </script>
  <% end %>

<% end %>

<% provide :body do %>
  <% if defined? @presenter.file_set_coins_title %>
    <span class="Z3988" title="<%= @presenter.file_set_coins_title %>" aria-hidden="true"></span>
  <% end %>
  <div class="skip"></div>
  <%# tag.div id: 'epub', class: press_presenter.present? ? press_presenter.press_subdomains : '' do %>
  <div class="too" id="epub">

    <div class="nm--toolbar">
      <div id="action-close" class="cozy-control">
        <a class="cozy-close cozy-control" href="<%= @back_link %>" title="Close reader and return to previous page" aria-label="Close reader">
          <i class="icon-x oi" data-glyph="x" aria-hidden="true"></i>
        </a>
      </div>

      <button id="action-contents" data-toggle="open" class="button--sm" aria-label="Contents">
          <i class="icon-align-left oi" data-glyph="align-left" title="Table of Contents" aria-hidden="true"></i>
      </button>

      <button id="action-search" class="button--sm" data-toggle="open" aria-label="Search">
          <i class="icon-magnifying-glass oi" data-glyph="magnifying-glass" title="Search" aria-hidden="true"></i>
      </button>

      <button id="action-notes" class="button--sm panel-closed" data-toggle="open" aria-label="Notes">
          <i class="icon-document oi" data-glyph="document" title="Notes and Definitions" aria-hidden="true"></i>
      </button>

      <% if @map_file_presenter.present? %>
        <button id="action-map" class="cozy-control cozy-panel-map" onclick="open_map()" aria-label="Interactive Map">
          <i class="icon-map oi" data-glyph="map" aria-hidden="true" title="Accompanying Interactive Map"></i>
        </button>
      <% end%>

      <div id="action-resources" class="cozy-control cozy-panel-resources">
        <a class="cozy-control" href="<%= @parent_presenter.catalog_url + '#resources' %>" target="_blank" aria-label="Resources">
            <i class="icon-folder oi" data-glyph="folder" aria-hidden="true"></i>
        </a>
      </div>

      <button id="action-info" class="button--sm" data-toggle="open" aria-label="Info">
        <i class="icon-info oi" data-glyph="info" title="Book Information" aria-hidden="true"></i>
      </button>


      <div id="action-help" class="cozy-control cozy-panel-feedback">
        <a class="cozy-control" href="https://umich.qualtrics.com/jfe/form/SV_3KSLynPij0fqrD7?publisher=&url=" target="_blank" title="Report a problem or share feedback">
            <i class="icon-question-mark oi" data-glyph="question-mark" aria-hidden="true"></i>
        </a>
      </div>

    </div>

    <div class="nm--panels" data-modal-actived="false">
      <%= render "cozy_pdec_notes", presenter: @presenter, parent_presenter: @parent_presenter %>
    </div>
    <div class="nm--reader" id="reader"></div>


    <% if @map_file_presenter.present? %>
      <%# hastily-copied from a dynamically-added interactive map modal within CSB %>
      <div class="cozy-modal modal-slide full" id="modal-pdc-map" aria-labelledby="modal-pdc-map-title" role="dialog" aria-describedby="modal-pdc-map-content" aria-hidden="true">
        <div class="modal__overlay" tabindex="-1" data-modal-close="">
          <div class="modal__container " role="dialog" aria-modal="true" aria-labelledby="modal-pdc-map-title" aria-describedby="modal-pdc-map-content" id="modal-pdc-map-container" style="height: 1170px; width: 2406px;">
            <div role="document">
              <header class="modal__header">
                <h3 class="modal__title" id="modal-pdc-map-title">Accompanying Interactive Map for <i>La Princesse de Cl√®ves</i></h3>
                <button class="modal__close" aria-label="Close modal" aria-controls="modal-pdc-map-container" data-modal-close="" onclick="close_map()"></button>
              </header>
              <main class="modal__content " id="modal-pdc-map-content" style="height: 980px;">
                <div style="height: 100%; width: 100%"><iframe title='Accompanying Interactive Map for "La Princesse de Cleves"' style="width: 100%; height: 100%;" src="<%= @map_file_presenter %>"></iframe></div>
              </main><footer class="modal__footer"><button class="button button--inline button--default" onclick="close_map()">Close</button></footer>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <script type="text/javascript">
      if ( true ) {

        // Configure and initiate reader
        var reader = cozy.reader('reader', {
          href: "<%= "#{main_app.epub_ebook_url.gsub!(/\?.*/, '')}/" %>",
          skipLink: '.skip',
          download_links: <%= @ebook_download_presenter.csb_download_links.to_json.html_safe %>,
          loader_template: '<div class="fulcrum-loading"><div class="rect rect1"></div><div class="circle circ1"></div><div class="rect rect2"></div><div class="circle circ2"></div></div>',
          <% if %w[leverpress michigan mps uncpress].include? @subdomain %>
          injectStylesheet: '/assets/css/fulcrum_enhanced_display.css',
          <% end %>
          metadata: {
            doi: '<%= @citable_link %>',
            location: 'Ann Arbor, MI'
          }
        });
        var controls = {};

        <%= render "cozy_controls_top", presenter: @presenter, parent_presenter: @parent_presenter %>

        <%= render "cozy_controls_bottom", presenter: @presenter, parent_presenter: @parent_presenter %>

        <%= render "cozy_controls_notes", presenter: @presenter, parent_presenter: @parent_presenter %>

        <%= render "cozy_controls_tools", presenter: @presenter, parent_presenter: @parent_presenter %>        

        function runFrenchCheckbox(frenchCheckbox, frenchTexts) {
          console.log("-- runFrenchCheckbox");
          if (frenchCheckbox.checked) {
            if (frenchTexts !== null) {
              for(var i =0, n = frenchTexts.length; i < n; i++) {
                var frenchText = frenchTexts[i];
                frenchText.classList.remove('hide');
                frenchText.classList.add('display');
              }
            }
          } else {
            if (frenchTexts !== null) {
              for(var i =0, n = frenchTexts.length; i < n; i++) {
                var frenchText = frenchTexts[i];
                frenchText.classList.remove('display');
                frenchText.classList.add('hide');
              }
            }
          }
        }

        function runEnglishCheckbox(englishCheckbox, englishTexts) {
          console.log("-- runEnglishCheckbox");
          if (englishCheckbox.checked) {
            if (englishTexts !== null) {
              for(var i =0, n = englishTexts.length; i < n; i++) {
                var englishText = englishTexts[i];
                englishText.classList.remove('hide');
                englishText.classList.add('display');
              }
            }
          } else {
            if (englishTexts !== null) {
              for(var i =0, n = englishTexts.length; i < n; i++) {
                var englishText = englishTexts[i];
                englishText.classList.remove('display');
                englishText.classList.add('hide');
              }
            }
          }
        }

        function runTermsCheckbox(termsCheckbox, terms) {
          console.log("-- runTermsCheckbox");
          if (termsCheckbox.checked) {
            if (terms !== null) {
              for (let i =0, n = terms.length; i < n; i++) {
                let term = terms[i];
                term.classList.add('highlight');
              }
            }
          } else {
            if (terms !== null) {
              for (let i =0, n = terms.length; i < n; i++) {
                let term = terms[i];
                term.classList.remove('highlight');
              }
            }
          }
        }

        function runKeywordsCheckbox(keywordsCheckbox, keywords) {
          console.log("-- runKeywordsCheckbox");
          if (keywordsCheckbox.checked) {
            if (keywords !== null) {
              for (var i =0, n = keywords.length; i < n; i++) {
                var keyword = keywords[i];
                keyword.classList.add('highlight');
              }
            }
          } else {
            if (keywords !== null) {
              for (var i =0, n = keywords.length; i < n; i++) {
                var keyword = keywords[i];
                keyword.classList.remove('highlight');
              }
            }
          }
        }

        reader.on('ready:contents', function(contents) {
          console.log('-- ready:contents');
          //find note links in EPUB
          var note_links = contents.content.querySelectorAll("a[data-note-ref]");
          for (let i =0, n = note_links.length; i < n; i++) {
            let note_link = note_links[i];
            note_link.addEventListener('click', click_handler);                
          }

          var frenchTexts =  contents.document.querySelectorAll(".french");
          var frenchCheckbox = document.querySelector('#french');

          runFrenchCheckbox(frenchCheckbox, frenchTexts);
          frenchCheckbox.addEventListener('change', (contents) => {
            runFrenchCheckbox(frenchCheckbox, frenchTexts);
          });

          var englishTexts =  contents.document.querySelectorAll(".english");
          var englishCheckbox = document.querySelector('#english');

          runEnglishCheckbox(englishCheckbox, englishTexts);
          englishCheckbox.addEventListener('change', (contents) => {
            runEnglishCheckbox(englishCheckbox, englishTexts);
          });       

          var terms = contents.document.querySelectorAll(".FrequentlyUsedTerm", ".FrequentlyUsedTermTermwDefinition"); 
          var termsCheckbox = document.querySelector('#terms');

          runTermsCheckbox(termsCheckbox, terms);
          termsCheckbox.addEventListener('change', (contents) => {
            runTermsCheckbox(termsCheckbox, terms);
          });
           
          var keywords = contents.document.querySelectorAll(".LexicalDossierLink");
          var keywordsCheckbox = document.querySelector('#keywords');

          runKeywordsCheckbox(keywordsCheckbox, keywords);
          keywordsCheckbox.addEventListener('change', (contents) => {
            runKeywordsCheckbox(keywordsCheckbox, keywords);
          });
        });

        // Initiate EPUB Reader
        // reader.start(function() {
        // });
        reader.start(function () {
          console.log('-- started');
          tools_panel();
          formatSections();
          formatNotes();
          formatDefinitions();
          formatCharacters();
        });

        reader.on('resized', function () {
          console.log(":: resize detected");
        });
      }
    </script>
  <%# end %>
  </div>
  <%= render 'shared/ga' %>
<% end %>
<%= render template: 'layouts/csb_too_viewer' %>
